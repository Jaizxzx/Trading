//@version=5
strategy("NY Session FVG Strategy", overlay=true, initial_capital=100000, default_qty_value=20, commission_type=strategy.commission.percent, commission_value=0.01)

// Input for date range
startDate = input.time(timestamp("2024-08-18"), "Start Date")
endDate = input.time(timestamp("2024-08-22"), "End Date")

// Function to get New York time
nyTime() =>
    time - 4 * 3600 * 1000 // Adjust for NY time (UTC-4)

// Function to check if current bar is within date range
isInDateRange() =>
    nyTime() >= startDate and nyTime() <= endDate

// Function to check if current time is in the 17:00-08:00 session
isInOvernightSession() =>
    ny_hour = hour(nyTime())
    ny_minute = minute(nyTime())
    currentTime = ny_hour * 100 + ny_minute
    (currentTime >= 1300 or currentTime < 400)

// Function to check if current time is in the 8:30-10:00 trading session
isInTradingSession() =>
    ny_hour = hour(nyTime())
    ny_minute = minute(nyTime())
    currentTime = ny_hour * 100 + ny_minute
    (currentTime >= 430 and currentTime < 600)

// Variables to store overnight session high and low
var float overnightHigh = na
var float overnightLow = na
var int sessionCount = 0
var float overnightPips = 0
var bool tradePlaced = false

// Variables for the 8:30-10:00 trading session
var float tradingSessionHigh = na
var float tradingSessionLow = na

// Get the high of the candle 10 minutes ago
tenMinutesAgoHigh = high[2]
tenMinutesAgolow = low[2]

// Start of overnight session (17:00 NY time)
if hour(nyTime()) == 13 and minute(nyTime()) == 0 and isInDateRange()
    sessionCount += 1
    overnightHigh := high
    overnightLow := low
    tradePlaced := false
    label.new(bar_index, high, "Start " + str.tostring(sessionCount), 
              color=color.orange, textcolor=color.white, 
              style=label.style_label_down, size=size.normal)

// Update overnight session high and low
if isInOvernightSession() and isInDateRange()
    overnightHigh := math.max(nz(overnightHigh, high), high)
    overnightLow := math.min(nz(overnightLow, low), low)

// End of overnight session (08:00 NY time)
if hour(nyTime()) == 4 and minute(nyTime()) == 0 and isInDateRange()
    overnightPips := (overnightHigh - overnightLow) * 10000
    
    label.new(bar_index, overnightHigh, "H: " + str.tostring(overnightHigh, "#.#####"), 
              color=color.green, textcolor=color.white, 
              style=label.style_label_down, size=size.normal)
    label.new(bar_index, overnightLow, "L: " + str.tostring(overnightLow, "#.#####"), 
              color=color.red, textcolor=color.white, 
              style=label.style_label_up, size=size.normal)
    label.new(bar_index, (overnightHigh + overnightLow) / 2, 
              "Pips: " + str.tostring(overnightPips, "#.#") + "\nSession " + str.tostring(sessionCount),
              color=color.blue, textcolor=color.white, 
              style=label.style_label_left, size=size.normal)

// Start of trading session (8:30 NY time)
if hour(nyTime()) == 4 and minute(nyTime()) == 30 and isInDateRange()
    tradingSessionHigh := high
    tradingSessionLow := low

// Variables to control trade entry
var bool longTaken = false
var bool shortTaken = false

// Reset trade flags at the start of each trading session
if hour(nyTime()) == 4 and minute(nyTime()) == 30 and isInDateRange()
    longTaken := false
    shortTaken := false

// Update trading session high and low and check for FVG
if isInTradingSession() and isInDateRange()
    tradingSessionHigh := math.max(nz(tradingSessionHigh, high), high)
    tradingSessionLow := math.min(nz(tradingSessionLow, low), low)
    
    // FVG condition and trading logic
    if low - tenMinutesAgoHigh > 0 and not longTaken and overnightPips > 23
        strategy.entry("Long", strategy.long)
        strategy.exit("TP Long", "Long", profit = 15 * syminfo.mintick * 10000, loss = 8 * syminfo.mintick * 10000)
        longTaken := true
        label.new(bar_index, low, "FVG & BUY", color=color.green, textcolor=color.white, style=label.style_label_up, size=size.normal)
        label.new(bar_index[2], high[2], "FVG START", color=color.green, textcolor=color.white, style=label.style_label_down, size=size.normal)
    
    else if high - tenMinutesAgolow < 0 and longTaken and not shortTaken and overnightPips > 23
        strategy.entry("Short", strategy.short)
        strategy.exit("TP Short", "Short", profit = 15 * syminfo.mintick * 10000, loss = 8 * syminfo.mintick * 10000)
        shortTaken := true
        label.new(bar_index, high, "FVG & SELL", color=color.red, textcolor=color.white, style=label.style_label_down, size=size.normal)
        label.new(bar_index[2], low[2], "FVG START", color=color.red, textcolor=color.white, style=label.style_label_up, size=size.normal)

// Plot overnight session high and low
plot(isInOvernightSession() ? overnightHigh : na, color=color.green, linewidth=2, title="Overnight High")
plot(isInOvernightSession() ? overnightLow : na, color=color.red, linewidth=2, title="Overnight Low")

// Background color for overnight sessions
bgcolor(isInOvernightSession() ? color.new(color.blue, 90) : na)

// Background color for trading sessions
bgcolor(isInTradingSession() ? color.new(color.yellow, 90) : na)